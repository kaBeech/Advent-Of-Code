import Data.List.Split
import Text.Regex.TDFA
import Text.Regex.TDFA.Text ()
main = print ("Part 1: Adding the answers together yields: " ++ show (foldl (\total instn -> total + ((read (instn =~ "[0-9]{1,3}" :: String) :: Int) * (read (drop 1 (instn =~ ",[0-9]{1,3}" :: String)) :: Int))) 0 (getAllTextMatches ("xmul(2,4)&mul[3,7]!^don't()_mul(5,5)+mul(32,64](mul(11,8)undo()?mul(8,5))" =~ "m[t-v]l[(][0-9]{1,3},[0-9]{1,3}[)]") :: [String])) ++ ". Part 2: Adding the enabled answers together yields: " ++ show (foldl (\total instn -> total + ((read (instn =~ "[0-9]{1,3}" :: String) :: Int) * (read (drop 1 (instn =~ ",[0-9]{1,3}" :: String)) :: Int))) 0 (getAllTextMatches (concat (head (splitOn "don't()" "xmul(2,4)&mul[3,7]!^don't()_mul(5,5)+mul(32,64](mul(11,8)undo()?mul(8,5))") : map (concat . tail . splitOn "do()") (tail (splitOn "don't()" "xmul(2,4)&mul[3,7]!^don't()_mul(5,5)+mul(32,64](mul(11,8)undo()?mul(8,5))"))) =~ "m[t-v]l[(][0-9]{1,3},[0-9]{1,3}[)]") :: [String])) ++ ".")
